#SSL, SSLv3, TLS, TLSv1, SSL_TLS
com.ibm.ssl.protocol=TLSv1.2
#Underlying JSSE provider.  For example "IBMJSSE2" or "SunJSSE"
com.ibm.ssl.contextProvider=SunJSSE
#The name of the file that contains the KeyStore object
com.ibm.ssl.keyStore=client-cert.crt
#The password for the KeyStore object
com.ibm.ssl.keyStorePassword=brt123
#"PKCS12", "JKS", or "JCEKS"
com.ibm.ssl.keyStoreType=X.509
#"IBMJCE" or "IBMJCEFIPS"
#com.ibm.ssl.keyStoreProvider=IBMJCE
#The name of the file that contains the TrustStore object
com.ibm.ssl.trustStore=cacert.crt
#The password for the TrustStore object
#com.ibm.ssl.trustStorePassword=MySecretPassword
#The type of KeyStore object that you want the default TrustManager to use. Same possible values as "keyStoreType
com.ibm.ssl.trustStoreType=X.509
#Trust store provider, for example "IBMJCE" or "IBMJCEFIPS"
#com.ibm.ssl.trustStoreProvider=IBMJCE
#A list of which ciphers are enabled.  Values are dependent on the provider,
# for example: SSL_RSA_WITH_AES_128_CBC_SHA;SSL_RSA_WITH_3DES_EDE_CBC_SHA
#com.ibm.ssl.enabledCipherSuites=
#Sets the algorithm that will be used to instantiate a KeyManagerFactory object
# instead of using the default algorithm available in the platform. Example values:
# "IbmX509" or "IBMJ9X509" PKIX SunX509
com.ibm.ssl.keyManager=SunX509
#Sets the algorithm that will be used to instantiate a TrustManagerFactory object
# instead of using the default algorithm available in the platform. Example values:
# "PKIX" or "IBMJ9X509
com.ibm.ssl.trustManager=SunX509
com.ibm.ssl.privateStore=client-key-pkcs8.pem