<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.bus</groupId>
	<artifactId>bus_server</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>bus_server</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jdk.version>1.8</jdk.version>
		<jdk.classifier></jdk.classifier>
		<postgresql.version>42.0.0</postgresql.version>
		<mqtt.paho.version>1.1.0</mqtt.paho.version>
	</properties>

	<profiles>
		<profile>
			<id>jdk18</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<jdk.version>1.8</jdk.version>
				<jdk.classifier></jdk.classifier>
				<postgresql.version>42.0.0</postgresql.version>
			</properties>
		</profile>
		<profile>
			<id>jdk16</id>
			<properties>
				<jdk.version>1.6</jdk.version>
				<jdk.classifier>${jdk.version}</jdk.classifier>
				<postgresql.version>42.0.0.jre6</postgresql.version>
			</properties>
		</profile>
		<profile>
			<id>jdk17</id>
			<properties>
				<jdk.version>1.7</jdk.version>
				<jdk.classifier>${jdk.version}</jdk.classifier>
			</properties>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>com.yeild.common</groupId>
			<artifactId>dbtools</artifactId>
			<version>${project.version}</version>
			<classifier>${jdk.classifier}</classifier>
		</dependency>
		<dependency>
			<groupId>com.yeild.common</groupId>
			<artifactId>JsonUtils</artifactId>
			<version>${project.version}</version>
			<classifier>${jdk.classifier}</classifier>
		</dependency>
		<dependency>
			<groupId>com.yeild.mqtt</groupId>
			<artifactId>MqttConnector</artifactId>
			<version>${project.version}</version>
			<classifier>${jdk.classifier}</classifier>
		</dependency>
		<dependency>
			<groupId>com.bus</groupId>
			<artifactId>bus_domain</artifactId>
			<version>${project.version}</version>
			<classifier>${jdk.classifier}</classifier>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.10</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.0,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration>
						<defaultLibBundleDir>lib</defaultLibBundleDir>
						<source>${jdk.version}</source>
						<target>${jdk.version}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<sourceDirectory>src/main/java/</sourceDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<targetPath>${project.build.directory}/${project.artifactId}/conf</targetPath>
			</resource>
			<resource>
				<directory>src/main/bash</directory>
				<targetPath>${project.build.directory}/${project.artifactId}/bin</targetPath>
			</resource>
			<!-- copy the extend library within jdk (default path ovrride by runtime 
				parameter -Djava.ext.dirs) -->
			<!-- also can copy this on the system that it's running -->
			<resource>
				<directory>${java.home}/lib/ext/</directory>
				<targetPath>${project.build.directory}/${project.artifactId}/lib</targetPath>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/${project.artifactId}/lib</outputDirectory>
							<excludeTransitive>false</excludeTransitive>
							<stripVersion>false</stripVersion>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.0.2</version>
				<configuration>
					<classifier>${jdk.classifier}</classifier>
					<outputDirectory>${project.build.directory}/${project.artifactId}/lib</outputDirectory>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>com.bus.server.BusServer</mainClass>
						</manifest>
						<manifestEntries>
							<Class-Path>conf/</Class-Path>
						</manifestEntries>
					</archive>
					<includes>
						<include>**/*.class</include>
					</includes>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
